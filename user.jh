entity UserAnnex {
  userId  Long
  name String,
  email String,
  phone String,
  nickname String,
  avatar String,
}

entity UserStatus {
  name String,			//  用户状态, 未审核，审核未通过,审核通过，黑名单
  desc TextBlob
}
relationship OneToOne {
  UserAnnex{status(name)} to UserStatus
}

entity UserStatusHistory{
  modifiedBy Long,
  modifiedTime Instant,
}
relationship OneToOne {
  UserStatusHistory{user(name)} to UserAnnex
  UserStatusHistory{oldStatus(name)} to UserStatus
  UserStatusHistory{newtatus(name)} to UserStatus
}

entity UserType {
  name String,			//  用户类型，普通用户，会员、商家
  desc TextBlob,
}
relationship ManyToMany {
  UserAnnex{userType(name)} to UserType
}

entity DeliveryAddress {
  aliases String,  		// 地址别名
  contact String,  		// 联系人
  phone String,    		// 联系人电话
  stateProvince String	// 省
  city String,			// 城市
  streetAddress String,	// 地址
  postalCode String,		// 邮编
}

relationship OneToMany {
  UserAnnex{deliveryAddress(aliases)} to DeliveryAddress
}

// defining multiple OneToMany relationships with comments
relationship OneToMany {
  UserAnnex{inviter(name)} to UserAnnex{invitee(name)}
}

entity Mercury {
  name String,
  imgLicense String,
  imgIdcardFront String,
  imgIdcardBack String,
  imgIdcardHold String,
  
  langitude Float,
  lantitude Float,
  provice String
  city String,
  street String,
  
  imgFacade String,
  imgIntroduces String,
  desc String,
}
entity MercuryStatus {
  name String,			//  用户状态, 未审核，审核未通过,审核通过，黑名单
  desc TextBlob
}
relationship OneToOne {
  Mercury{status(name)} to MercuryStatus
}

entity MercuryStatusHistory{
  modifiedBy Long,
  modifiedTime Instant,
}
relationship OneToOne {
  MercuryStatusHistory{mercury(name)} to Mercury
  MercuryStatusHistory{oldStatus(name)} to MercuryStatus
  MercuryStatusHistory{newtatus(name)} to MercuryStatus
}

entity OwnerType{
  name String,
  desc TextBlob
}
entity OwnerRelation{
}
relationship OneToOne {
  OwnerRelation{ownerType(name)} to OwnerType
  OwnerRelation{owner(name)} to UserAnnex
  OwnerRelation{mercury(name)} to Mercury
}

// Set pagination options
paginate UserType with infinite-scroll

dto * with mapstruct

// Set service options to all except few
service all with serviceClass
// Set an angular suffix
//angularSuffix * with mySuffix
//skipServer *
